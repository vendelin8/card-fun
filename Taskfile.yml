version: '3'

vars:
  GOLANGCI_VERSION: 1.55.2
  REPO: github.com/vendelin8/card-fun
  LINTPATH: .bin/golangci-lint
  LINTER: "{{.LINTPATH}}-{{.GOLANGCI_VERSION}}"
  CMD: cmd/server
  BIN: out/server

tasks:
  deps:
    cmds:
      - go mod tidy

  golanci-lint:
    cmds:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | bash -s -- -b .bin v{{.GOLANGCI_VERSION}}
      - mv {{.LINTPATH}} {{.LINTER}}
    generates:
      - ./{{.LINTER}}
    status:
      - test -f {{.LINTER}}

  lint:
    deps: [golanci-lint]
    cmds:
      - ./{{.LINTER}} run

  swagger:
    cmds:
      - swag i -d internal/api -o {{.CMD}}/docs

  build:
    deps: [deps]
    cmds:
      - cmd: go build -o {{.BIN}} {{.REPO}}/{{.CMD}}
    generates:
      - ./{{.BIN}}

  build-swag:
    cmds:
      - cmd: ln -s $GOPATH/src/{{.REPO}}/{{.CMD}}/docs $GOPATH/src/{{.REPO}}/out/
        ignore_error: true
    generates:
      - ./{{.BIN}}

  run:
    deps: [build, build-swag]
    cmds:
      - ./{{.BIN}}

  test:
    deps: [deps]
    cmds:
      - echo "testing ..."
      - go test -coverprofile coverage.out ./... -v -timeout 90s
      - go tool cover -func=coverage.out | grep 'total:'

  cover:
    cmds:
      - go tool cover -o=cov.html -html=coverage.out; sed -i 's/black/whitesmoke/g' cov.html; chromium cov.html

  docker-build:
    cmds:
      - DOCKER_BUILDKIT=1 docker build -t card-fun -f docker/Dockerfile .

  docker-run:
    deps: [docker-build]
    cmds:
      - docker-compose -f docker/docker-compose.yaml up

  dev:
    deps: [docker-build]
    cmds:
      - GOPATH=$GOPATH docker-compose -f docker/docker-compose-dev.yaml up

  docker-test:
    deps: [docker-build]
    cmds:
      - GOPATH=$GOPATH docker-compose -f docker/docker-compose-test.yaml up --abort-on-container-exit --exit-code-from backend
